# ============================================
# LUMA AI - FRONTEND ENVIRONMENT VARIABLES
# ============================================
# This file is for Vercel frontend deployment only
# Backend has its own .env.example in the /backend directory

# ============================================
# API CONFIGURATION
# ============================================

# Backend API URL
# Local development: http://localhost:4000
# Production: Replace with your Railway backend URL after deployment
VITE_API_URL=https://your-railway-backend.up.railway.app

# ============================================
# APPLICATION CONFIGURATION
# ============================================

# Application Name (displayed in UI)
VITE_APP_NAME=Luma AI

# Environment Mode
# Options: development, staging, production
VITE_ENV=production

# ============================================
# OPTIONAL: SUPABASE DIRECT ACCESS
# ============================================
# Only needed if frontend makes direct Supabase calls
# (Currently, all database access goes through backend API)

# VITE_SUPABASE_URL=https://your-project.supabase.co
# VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

# ============================================
# VERCEL DEPLOYMENT INSTRUCTIONS
# ============================================

# Step 1: Set Environment Variables in Vercel Dashboard
# -------------------------------------------------------
# 1. Go to https://vercel.com/dashboard
# 2. Select your project → Settings → Environment Variables
# 3. Add the following variables:
#
#    Variable Name           | Value
#    ----------------------- | ----------------------------------------
#    VITE_API_URL           | https://your-railway-backend.up.railway.app
#    VITE_APP_NAME          | Luma AI
#    VITE_ENV               | production
#
# 4. Select environment: Production, Preview, Development (or all)
# 5. Click "Save"

# Step 2: Deploy to Vercel
# -------------------------
# Method A: GitHub Auto-Deploy (Recommended)
#   - Push to GitHub main branch
#   - Vercel auto-deploys on every push
#
# Method B: Vercel CLI
#   - Run: npx vercel --prod
#   - Or: vercel deploy --prod (if CLI installed globally)

# Step 3: After Backend Deployment
# ---------------------------------
# Once Railway backend is deployed:
# 1. Get Railway backend URL (e.g., https://luma-backend-production.up.railway.app)
# 2. Update VITE_API_URL in Vercel Dashboard → Environment Variables
# 3. Redeploy frontend (Vercel → Deployments → ⋮ → Redeploy)

# ============================================
# LOCAL DEVELOPMENT
# ============================================

# For local development, create .env.local with:
# VITE_API_URL=http://localhost:4000
# VITE_APP_NAME=Luma AI
# VITE_ENV=development
