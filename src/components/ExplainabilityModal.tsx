import { motion, AnimatePresence } from 'motion/react';
import { X, Info, Brain, TrendingUp, AlertTriangle, Target, Lightbulb, CheckCircle } from 'lucide-react';
import { Button } from './ui/button';
import { Card } from './ui/card';
import { Badge } from './ui/badge';
import type { Nudge } from '../hooks/useMasterAgent';

interface ExplainabilityModalProps {
  nudge: Nudge;
  isOpen: boolean;
  onClose: () => void;
}

export function ExplainabilityModal({ nudge, isOpen, onClose }: ExplainabilityModalProps) {
  const getRuleCategory = (ruleName: string) => {
    if (ruleName.includes('cross_feature')) return 'bridge';
    if (ruleName.includes('risk') || ruleName.includes('wellness')) return 'wellness';
    if (ruleName.includes('momentum') || ruleName.includes('celebration')) return 'momentum';
    if (ruleName.includes('engagement')) return 'engagement';
    return 'insight';
  };

  const getCategoryInfo = (category: string) => {
    switch (category) {
      case 'bridge':
        return {
          icon: Target,
          color: 'blue',
          title: 'Cross-Feature Bridge',
          description: 'This nudge connects your activity across different features to help you make progress.'
        };
      case 'wellness':
        return {
          icon: AlertTriangle,
          color: 'red',
          title: 'Wellness Checkpoint',
          description: 'This nudge is designed to support your wellbeing based on patterns we\'ve noticed.'
        };
      case 'momentum':
        return {
          icon: TrendingUp,
          color: 'green',
          title: 'Momentum Celebration',
          description: 'This nudge celebrates your progress and encourages you to keep building on your success.'
        };
      case 'engagement':
        return {
          icon: CheckCircle,
          color: 'purple',
          title: 'Engagement Support',
          description: 'This nudge helps you stay connected and engaged with your personal growth journey.'
        };
      default:
        return {
          icon: Lightbulb,
          color: 'yellow',
          title: 'AI Insight',
          description: 'This nudge was generated by our AI based on your unique patterns and context.'
        };
    }
  };

  const getPriorityLabel = (priority: number) => {
    if (priority >= 8) return { label: 'High Priority', color: 'red' };
    if (priority >= 5) return { label: 'Medium Priority', color: 'yellow' };
    return { label: 'Low Priority', color: 'green' };
  };

  const parseRuleName = (ruleName: string) => {
    return ruleName
      .split('_')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  };

  const category = getRuleCategory(nudge.rule_name);
  const categoryInfo = getCategoryInfo(category);
  const CategoryIcon = categoryInfo.icon;
  const priorityInfo = getPriorityLabel(nudge.priority);

  return (
    <AnimatePresence>
      {isOpen && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50"
            onClick={onClose}
          />

          {/* Modal */}
          <div className="fixed inset-0 flex items-center justify-center z-50 p-4">
            <motion.div
              initial={{ opacity: 0, scale: 0.95, y: 20 }}
              animate={{ opacity: 1, scale: 1, y: 0 }}
              exit={{ opacity: 0, scale: 0.95, y: 20 }}
              transition={{ duration: 0.2 }}
              className="w-full max-w-lg"
              onClick={(e) => e.stopPropagation()}
            >
              <Card className="bg-white shadow-2xl overflow-hidden">
                {/* Header */}
                <div className={`bg-gradient-to-r ${
                  categoryInfo.color === 'blue' ? 'from-blue-500 to-cyan-500' :
                  categoryInfo.color === 'red' ? 'from-red-500 to-orange-500' :
                  categoryInfo.color === 'green' ? 'from-green-500 to-emerald-500' :
                  categoryInfo.color === 'purple' ? 'from-purple-500 to-pink-500' :
                  'from-yellow-500 to-orange-500'
                } p-6 relative`}>
                  <button
                    onClick={onClose}
                    className="absolute top-4 right-4 w-8 h-8 bg-white/20 hover:bg-white/30 backdrop-blur-sm rounded-full flex items-center justify-center transition-colors"
                  >
                    <X className="w-4 h-4 text-white" />
                  </button>

                  <div className="flex items-start gap-4">
                    <div className="w-12 h-12 bg-white/20 backdrop-blur-sm rounded-xl flex items-center justify-center flex-shrink-0">
                      <CategoryIcon className="w-6 h-6 text-white" />
                    </div>
                    <div>
                      <h2 className="text-xl font-semibold text-white mb-1">
                        Why This Nudge?
                      </h2>
                      <p className="text-white/90 text-sm">
                        {categoryInfo.title}
                      </p>
                    </div>
                  </div>
                </div>

                {/* Content */}
                <div className="p-6 space-y-6">
                  {/* Nudge Preview */}
                  <div>
                    <h3 className="text-sm font-medium text-gray-900 mb-3 flex items-center gap-2">
                      <Info className="w-4 h-4" />
                      The Nudge
                    </h3>
                    <Card className="bg-gray-50 p-4">
                      <h4 className="font-medium text-gray-900 mb-1">{nudge.title}</h4>
                      <p className="text-sm text-gray-600">{nudge.message}</p>
                    </Card>
                  </div>

                  {/* Category Explanation */}
                  <div>
                    <h3 className="text-sm font-medium text-gray-900 mb-3 flex items-center gap-2">
                      <Brain className="w-4 h-4" />
                      How It Works
                    </h3>
                    <p className="text-sm text-gray-700 leading-relaxed">
                      {categoryInfo.description}
                    </p>
                  </div>

                  {/* Specific Explanation */}
                  {nudge.explainability && (
                    <div>
                      <h3 className="text-sm font-medium text-gray-900 mb-3 flex items-center gap-2">
                        <Lightbulb className="w-4 h-4" />
                        Why Now?
                      </h3>
                      <Card className="bg-blue-50 border-blue-200 p-4">
                        <p className="text-sm text-blue-900 leading-relaxed">
                          {nudge.explainability}
                        </p>
                      </Card>
                    </div>
                  )}

                  {/* Technical Details */}
                  <div>
                    <h3 className="text-sm font-medium text-gray-900 mb-3">Technical Details</h3>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">Rule</span>
                        <code className="bg-gray-100 px-2 py-1 rounded text-xs font-mono">
                          {parseRuleName(nudge.rule_name)}
                        </code>
                      </div>
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">Surface</span>
                        <Badge variant="secondary" className="text-xs capitalize">
                          {nudge.surface}
                        </Badge>
                      </div>
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">Category</span>
                        <Badge variant="secondary" className="text-xs capitalize">
                          {nudge.category}
                        </Badge>
                      </div>
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">Priority</span>
                        <Badge
                          className={`text-xs ${
                            priorityInfo.color === 'red' ? 'bg-red-100 text-red-700' :
                            priorityInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-700' :
                            'bg-green-100 text-green-700'
                          }`}
                        >
                          {priorityInfo.label}
                        </Badge>
                      </div>
                    </div>
                  </div>

                  {/* How to Improve */}
                  <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-gray-900 mb-2 flex items-center gap-2">
                      <CheckCircle className="w-4 h-4 text-purple-600" />
                      Making Nudges Better
                    </h3>
                    <ul className="text-xs text-gray-700 space-y-1">
                      <li>• Accept nudges that are helpful - we'll show more like them</li>
                      <li>• Dismiss those that aren't - we'll learn your preferences</li>
                      <li>• Your feedback helps us personalize your experience</li>
                    </ul>
                  </div>

                  {/* Actions */}
                  <div className="flex gap-3">
                    <Button
                      onClick={onClose}
                      variant="outline"
                      className="flex-1"
                    >
                      Close
                    </Button>
                    <Button
                      onClick={() => {
                        // Could navigate to settings or provide more info
                        onClose();
                      }}
                      className="flex-1 bg-gradient-to-r from-purple-500 to-pink-500 text-white"
                    >
                      Adjust Settings
                    </Button>
                  </div>
                </div>
              </Card>
            </motion.div>
          </div>
        </>
      )}
    </AnimatePresence>
  );
}
