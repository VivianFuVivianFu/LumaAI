{
  "info": {
    "name": "Luma API - Phase 2.5 Testing",
    "description": "Complete API testing collection for Luma backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4000/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "session_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "goal_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "1.1 Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success field', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "1.2 Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test{{$timestamp}}@example.com\",\n  \"password\": \"TestPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has token', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.session.access_token).to.exist;",
                  "    pm.collectionVariables.set('access_token', jsonData.data.session.access_token);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "1.3 Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User data returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.user).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Dashboard",
      "item": [
        {
          "name": "2.1 Submit Mood Check-in",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mood_value\": 4,\n  \"notes\": \"Feeling good today!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/dashboard/mood-checkin",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "mood-checkin"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Mood check-in saved', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.mood_checkin).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2.2 Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/dashboard/stats",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "stats"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2.3 Get Mood History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/dashboard/mood-history?days=30",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "mood-history"],
              "query": [
                {
                  "key": "days",
                  "value": "30"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Chat",
      "item": [
        {
          "name": "3.1 Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First Chat\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/chat",
              "host": ["{{base_url}}"],
              "path": ["chat"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Conversation created', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.conversation).to.exist;",
                  "    pm.collectionVariables.set('conversation_id', jsonData.data.conversation.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3.2 Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello Luma, I'm feeling a bit anxious about an upcoming presentation at work. Can you help me work through this?\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/chat/{{conversation_id}}/messages",
              "host": ["{{base_url}}"],
              "path": ["chat", "{{conversation_id}}", "messages"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Message sent and response received', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.userMessage).to.exist;",
                  "    pm.expect(jsonData.data.assistantMessage).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3.3 Get Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chat/{{conversation_id}}",
              "host": ["{{base_url}}"],
              "path": ["chat", "{{conversation_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Conversation with messages returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.messages).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3.4 Get All Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/chat",
              "host": ["{{base_url}}"],
              "path": ["chat"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. Journal",
      "item": [
        {
          "name": "4.1 Create Journal Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mode\": \"present-virtues\",\n  \"title\": \"Reflecting on my strengths\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/journal",
              "host": ["{{base_url}}"],
              "path": ["journal"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Session created with initial prompt', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.session).to.exist;",
                  "    pm.expect(jsonData.data.initialPrompt).to.exist;",
                  "    pm.collectionVariables.set('session_id', jsonData.data.session.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4.2 Create Journal Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Today I realize I'm really good at problem-solving. When challenges come up at work, I stay calm and think through solutions methodically. This has helped my team many times. I'm also a good listener - my colleagues often come to me when they need support or advice.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/journal/{{session_id}}/entries",
              "host": ["{{base_url}}"],
              "path": ["journal", "{{session_id}}", "entries"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Entry created with AI insight', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.entry).to.exist;",
                  "    pm.expect(jsonData.data.insight).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4.3 Get Session",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/journal/{{session_id}}",
              "host": ["{{base_url}}"],
              "path": ["journal", "{{session_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4.4 Complete Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/journal/{{session_id}}/complete",
              "host": ["{{base_url}}"],
              "path": ["journal", "{{session_id}}", "complete"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4.5 Get All Sessions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/journal",
              "host": ["{{base_url}}"],
              "path": ["journal"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Goals",
      "item": [
        {
          "name": "5.1 Create Goal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Learn Spanish\",\n  \"description\": \"I want to become conversational in Spanish for travel and work\",\n  \"category\": \"personal-growth\",\n  \"timeframe\": \"6-months\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/goals",
              "host": ["{{base_url}}"],
              "path": ["goals"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Goal created with clarifications', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.goal).to.exist;",
                  "    pm.expect(jsonData.data.clarifications).to.be.an('array');",
                  "    pm.collectionVariables.set('goal_id', jsonData.data.goal.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "5.2 Get All Goals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/goals",
              "host": ["{{base_url}}"],
              "path": ["goals"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "5.3 Get Single Goal",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/goals/{{goal_id}}",
              "host": ["{{base_url}}"],
              "path": ["goals", "{{goal_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "6. Tools",
      "item": [
        {
          "name": "6.1 Create Brain Exercise",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"context_description\": \"I keep thinking I'm not good enough for my job and that I'll be found out as a fraud\",\n  \"original_thought\": \"I'm a fraud and everyone will realize it soon\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tools/brain",
              "host": ["{{base_url}}"],
              "path": ["tools", "brain"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Exercise created with reframe', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.exercise).to.exist;",
                  "    pm.expect(jsonData.data.exercise.reframe).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "6.2 Create Narrative",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"context_description\": \"I've been feeling stuck since losing my job last year. I used to be so confident but now I doubt everything.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tools/narrative",
              "host": ["{{base_url}}"],
              "path": ["tools", "narrative"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Narrative created with chapters', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.narrative).to.exist;",
                  "    pm.expect(jsonData.data.narrative.chapter_past).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "6.3 Create Future Me Exercise",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"goal_or_theme\": \"I want to feel confident speaking up in meetings\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/tools/future-me",
              "host": ["{{base_url}}"],
              "path": ["tools", "future-me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Future Me exercise created', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.exercise).to.exist;",
                  "    pm.expect(jsonData.data.exercise.visualization_script).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "6.4 Get All Brain Exercises",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/tools/brain",
              "host": ["{{base_url}}"],
              "path": ["tools", "brain"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "7. Memory",
      "item": [
        {
          "name": "7.1 Get Memory Settings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/memory/settings",
              "host": ["{{base_url}}"],
              "path": ["memory", "settings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Memory settings returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.settings).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "7.2 Get Memory Blocks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/memory/blocks",
              "host": ["{{base_url}}"],
              "path": ["memory", "blocks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Memory blocks returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.blocks).to.be.an('array');",
                  "    console.log('Memory blocks count:', jsonData.data.count);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "7.3 Search Memory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"confidence and self-worth\",\n  \"limit\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/memory/search",
              "host": ["{{base_url}}"],
              "path": ["memory", "search"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Search results returned', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.results).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "7.4 Get Memory Insights",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/memory/insights",
              "host": ["{{base_url}}"],
              "path": ["memory", "insights"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
